version: '3.8'
services:
  ui-dashboard:
    build: ../ui_dashboard
    ports:
      - "8501:8501"
    networks:
      - my_network

  flask-app:
    container_name: flask-app
    build: .
    ports:
      - "5000:5000"
    environment:
      FLASK_APP: data-collection-service.py
      FLASK_ENV: development
      FLASK_DEBUG: 1
    networks:
      - my_network

  postgres-server:
    container_name: postgres-server
    hostname: postgres-server
    build: ..\data_storage_service\
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminXDD
      POSTGRES_DB: Urban_Farm_Monitoring
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --host=postgres-server --port=5432 --username=admin --dbname=Urban_Farm_Monitoring"]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 2s


  sensor1:
    image: abelfodil/sensor:0.0.1
    environment:
      - SERVER_URL=http://flask-app:5000/receive
      - SCENARIO_ID=1
    networks:
      - my_network
    depends_on:
      - flask-app

  sensor2:
    image: abelfodil/sensor:0.0.1
    environment:
      - SERVER_URL=http://flask-app:5000/receive
      - SCENARIO_ID=2
    networks:
      - my_network
    depends_on:
      - flask-app

  sensor3:
    image: abelfodil/sensor:0.0.1
    environment:
      - SERVER_URL=http://flask-app:5000/receive
      - SCENARIO_ID=3
    networks:
      - my_network
    depends_on:
      - flask-app

  sensor4:
    image: abelfodil/sensor:0.0.1
    environment:
      - SERVER_URL=http://flask-app:5000/receive
      - SCENARIO_ID=4
    networks:
      - my_network
    depends_on:
      - flask-app

  sensor5:
    image: abelfodil/sensor:0.0.1
    environment:
      - SERVER_URL=http://flask-app:5000/receive
      - SCENARIO_ID=5
    networks:
      - my_network
    depends_on:
      - flask-app

  sensor6:
    image: abelfodil/sensor:0.0.1
    environment:
      - SERVER_URL=http://flask-app:5000/receive
      - SCENARIO_ID=6
    networks:
      - my_network
    depends_on:
      - flask-app

  sensor7:
    image: abelfodil/sensor:0.0.1
    environment:
      - SERVER_URL=http://flask-app:5000/receive
      - SCENARIO_ID=7
    networks:
      - my_network
    depends_on:
      - flask-app

  sensor8:
    image: abelfodil/sensor:0.0.1
    environment:
      - SERVER_URL=http://flask-app:5000/receive
      - SCENARIO_ID=8
    networks:
      - my_network
    depends_on:
      - flask-app

  sensorCustom:
    image: abelfodil/sensor:0.0.1
    environment:
      - SERVER_URL=http://flask-app:5000/receive
      - PLANT_ID=12
      - SENSOR_ID=88712531
      - SENSOR_VERSION=FR-v7
      - PERIOD=2s
      - MEASURES=temperature:285.15°K,temperature:286.15°K,humidity:12%
    networks:
      - my_network
    depends_on:
      - flask-app
      
networks:
  my_network:
    driver: bridge